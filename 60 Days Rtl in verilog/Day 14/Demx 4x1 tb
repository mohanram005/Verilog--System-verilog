module demux_tb;

  
  reg [1:0] sel;
  reg i;
  wire y0, y1, y2, y3;

  // Instantiate the demux module
  demux uut (
    .sel(sel),
    .i(i),
    .y0(y0),
    .y1(y1),
    .y2(y2),
    .y3(y3)
  );

  // Initialize inputs and run the test cases
  initial begin
    
    $monitor("sel = %b, i = %b | y0 = %b, y1 = %b, y2 = %b, y3 = %b", sel, i, y0, y1, y2, y3);

    // T 1
    sel = 2'b00;
    i = 1'b1;
    #10;

    // T 2
    sel = 2'b01;
    i = 1'b1;
    #10;

    // T 3
    sel = 2'b10;
    i = 1'b1;
    #10;

    // T 4
    sel = 2'b11;
    i = 1'b1;
    #10;

    // Te 5: Change input to 0
    sel = 2'b00;
    i = 1'b0;
    #10;

    // T 6: 
    sel = 2'b01;
    i = 1'b0;
    #10;

    // T 7: 
    sel = 2'b10;
    i = 1'b0;
    #10;

    // T 8: 
    sel = 2'b11;
    i = 1'b0;
    #10;

    // End of simulation
    $finish;
  end
  initial begin
    $dumpfile("demux.vcd");
    $dumpvars(0,demux_tb);
  end
endmodule
